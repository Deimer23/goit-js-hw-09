{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,IAIHQ,MAAK,EAACC,UAACA,EAASC,OAAEA,MACtBC,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBJ,QAAkBC,MAAW,IAC3EI,OAAM,EAACL,UAAEA,EAASC,OAAEA,MACrBC,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBN,QAAgBC,MAAW,G,CAlB9DM,SAASC,cAAc,SAwB/BC,iBAAiB,UAAWC,IAC7BA,EAAMC,iBACN,MAAOC,UAASrB,MAACA,EAAKsB,KAAEA,EAAIC,OAAEA,IAAWJ,EAAMK,cAC/C,IAAIC,EAAYC,OAAO1B,EAAM2B,OAC7B,IAAI,IAAIC,EAAI,EAAGA,GAAIF,OAAOH,EAAOI,OAAQC,GAAG,EAC1C9B,EAAc8B,EAAGH,GACjBA,GAAaC,OAAOJ,EAAKK,OACzBE,QAAQC,IAAIL,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject)=>{    \n    const shouldResolve = Math.random() > 0.3;  \n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve({position, delay})  \n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n     \n  });\n\n  promise.then(({position1, delay1})=>{\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position1} in ${delay1}ms`);\n  }).catch(({ position1, delay1 }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position1} in ${delay1}ms`);\n  });\n \n}\n\n\nform.addEventListener('submit', (event)=>{\n    event.preventDefault();\n    const {elements:{delay, step, amount}} = event.currentTarget;    \n    let delayTemp = Number(delay.value);\n    for(let i = 1; i<= Number(amount.value); i+=1){\n      createPromise(i, delayTemp);\n      delayTemp += Number(step.value);  \n      console.log(delayTemp);      \n    }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","position1","delay1","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","delayTemp","Number","value","i","console","log"],"version":3,"file":"03-promises.7c0b8dc5.js.map"}